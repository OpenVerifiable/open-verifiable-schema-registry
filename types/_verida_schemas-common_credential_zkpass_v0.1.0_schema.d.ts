/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Unique id of the task allocated by the allocator node
 */
export type TaskID = string;
/**
 * Values of public fields defined in schema
 */
export type ZkPassPublicFields = string[];
/**
 * The address of the allocator node
 */
export type AllocatorAddress = string;
/**
 * Hash of public field values
 */
export type PublicFields = string;
/**
 * Signature of the task meta data by the allocator node
 */
export type AllocatorSignature = string;
/**
 * Hash value of user unique id in the data source
 */
export type UHash = string;
/**
 * The address of the validator node
 */
export type ValidatorAddress = string;
/**
 * The signature of the verification result by the allocator node
 */
export type ValidatorSignature = string;
/**
 * The ID of zkPass schema
 */
export type ZkPassSchemaID = string;
/**
 * The label of zkPass schema
 */
export type SchemaLabel = string;
/**
 * Decentralized Identifier on the network
 */
export type DIDOfTheSubject = string;

/**
 * A schema for zkpass credential
 */
export interface SchemaForZKPass {
  taskId: TaskID;
  publicFields?: ZkPassPublicFields;
  allocatorAddress: AllocatorAddress;
  publicFieldsHash?: PublicFields;
  allocatorSignature: AllocatorSignature;
  uHash: UHash;
  validatorAddress: ValidatorAddress;
  validatorSignature: ValidatorSignature;
  zkPassSchemaId: ZkPassSchemaID;
  zkPassSchemaLabel: SchemaLabel;
  id: DIDOfTheSubject;
  [k: string]: unknown;
}
