/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Schema for a meeting transcript
 */
export type MeetingTranscript = BaseSchema & {
  organizerEmail: OrganizerEmail;
  user?: User;
  speakers?: Speakers;
  meetingAttendees?: MeetingAttendees;
  duration?: Duration;
  dateTime?: Datetime;
  sentence?: Sentence;
  calendarEventId?: CalendarID;
  [k: string]: unknown;
};
/**
 * Name of the item within card list and details
 */
export type Name = string;
/**
 * Brief summary of item
 */
export type Summary = string;
/**
 * Is this record archived?
 */
export type Archived = boolean;
/**
 * URI of the schema for this record
 */
export type Schema = string;
/**
 * Name of the application this data was sourced from
 */
export type SourceApplication = string;
/**
 * ID of the account from the original data source
 */
export type SourceAccountID = string;
/**
 * ID from the original data source
 */
export type SourceID = string;
/**
 * URL of an icon for this record. Must be square, prefer SVG, otherwise minimum 50p x 50p
 */
export type Icon = string;
/**
 * Additional text that should be indexed for search purposes
 */
export type IndexableText = string;
/**
 * Date/time this record was inserted
 */
export type Inserted = string;
/**
 * Date/time this record was modified
 */
export type Modified = string;
/**
 * Email address of the meeting organizer
 */
export type OrganizerEmail = string;
/**
 * Array of speakers
 */
export type Speakers = Person[];
/**
 * List of meeting attendees
 */
export type MeetingAttendees = Person[];
/**
 * Duration of the meeting audio in seconds
 */
export type Duration = number;
/**
 * Datetime info when the transcript was created
 */
export type Datetime = string;
/**
 * Array of sentences in the transcript with details like raw text, speaker name, etc.
 */
export type Sentence = Sentence1[];
/**
 * Unique identifier for the calendar event (Google or Outlook)
 */
export type CalendarID = string;

/**
 * A base schema
 */
export interface BaseSchema {
  name?: Name;
  summary?: Summary;
  archived?: Archived;
  schema: Schema;
  signatures?: Signatures;
  sourceApplication?: SourceApplication;
  sourceAccountId?: SourceAccountID;
  sourceId?: SourceID;
  sourceData?: SourceData;
  icon?: Icon;
  indexableText?: IndexableText;
  insertedAt?: Inserted;
  modifiedAt?: Modified;
  [k: string]: unknown;
}
/**
 * Signatures verifying this data has been signed
 */
export interface Signatures {
  [k: string]: unknown;
}
/**
 * Raw data from the original source
 */
export interface SourceData {
  [k: string]: unknown;
}
/**
 * The user who recorded the meeting on behalf of another
 */
export interface User {
  /**
   * Email address of the person
   */
  email?: string;
  /**
   * Display name of the person
   */
  displayName: string;
  /**
   * Full name of the attendee
   */
  name?: string;
  /**
   * Phone number of the attendee
   */
  phoneNumber?: string;
  [k: string]: unknown;
}
/**
 * Schema representing a person
 */
export interface Person {
  /**
   * Email address of the person
   */
  email?: string;
  /**
   * Display name of the person
   */
  displayName: string;
  /**
   * Full name of the attendee
   */
  name?: string;
  /**
   * Phone number of the attendee
   */
  phoneNumber?: string;
  [k: string]: unknown;
}
/**
 * Details of a sentence in the transcript
 */
export interface Sentence1 {
  /**
   * Raw text of the sentence
   */
  rawText: string;
  /**
   * Name of the speaker for this sentence
   */
  speakerName: string;
  [k: string]: unknown;
}
